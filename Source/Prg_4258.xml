<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<Application>

  <Header>
    <Version val="13030.00"/>
    <WithIsn val="Y"/>
    <_InternalTask val="N"/>
    <IsRoot val="N"/>
    <InIndex val="N"/>
    <UniqueISNConvState val="12"/>
  </Header>

  <ProgramsRepository>
    <Programs>
      <Task MainProgram="N">
        <Header Description="UFB545 (Re)SetDecimalSep." ISN_2="1" LastIsn="1" id="4258">
          <Public val="UFB545"/>
          <ExecutionRight comp="-1"/>
          <Resident val="N"/>
          <SQL val="N"/>
          <ReturnValue>
            <ReturnValueAttr/>
            <ParametersAttributes/>
          </ReturnValue>
          <SqlWhereExist val="N"/>
          <TaskType val="B"/>
          <External val="N"/>
          <Offline val="N"/>
          <FormType val="N"/>
          <DotNetObjectExists val="N"/>
          <LastModified _date="734996" _time="39805" date="08/05/2013" time="11:03:25"/>
        </Header>
        <ItemIsn val="9"/>
        <Resource>
          <Columns>
            <Column id="1" name="pi.dSeparator">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_UNICODE" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <StoredAs id="173" val="31"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="2" name="pi.kSeparator">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_UNICODE" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <StoredAs id="173" val="31"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="3" name="v.Initial_dSeparator">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_UNICODE" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <StoredAs id="173" val="31"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="4" name="v.Initial_kSeparator">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_UNICODE" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <StoredAs id="173" val="31"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="5" name="v.Current_dSeparator">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_UNICODE" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <StoredAs id="173" val="31"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="6" name="v.Current_kSeparator">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_UNICODE" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <StoredAs id="173" val="31"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="7" name="v.New_dSeparator">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_UNICODE" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <StoredAs id="173" val="31"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="8" name="v.New_kSeparator">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_UNICODE" id="1"/>
                <Picture id="157" valUnicode="1"/>
                <StoredAs id="173" val="31"/>
                <Size id="174" val="2"/>
                <_Flip id="194"/>
                <_FieldStyle id="276" val="1"/>
              </PropertyList>
            </Column>
            <Column id="9" name="v.ForceWrite">
              <PropertyList model="FIELD">
                <Model attr_obj="FIELD_LOGICAL" id="1"/>
                <StoredAs id="173" val="15"/>
              </PropertyList>
            </Column>
          </Columns>
        </Resource>
        <Information>
          <Key>
            <Mode val="N"/>
          </Key>
          <DB comp="-1"/>
          <Sort>
            <CLS val="A"/>
          </Sort>
          <ForceRecordDelete DEL="N"/>
          <EndTaskCondition val="Y"/>
          <EvaluateEndCondition val="B"/>
          <InitialMode val="M"/>
          <Locate Direction="A"/>
          <Range Direction="A"/>
          <VarRange/>
          <TaskProperties>
            <SelectionTable val="N"/>
            <ConfirmUpdate CNFU="N"/>
            <ConfirmCancel val="N"/>
            <ErrorStrategy val="A"/>
            <LockingStrategy val="M"/>
            <CacheStrategy val="T"/>
            <ForceRecordSuffix val="N"/>
            <TransactionMode val="P"/>
            <TransactionBegin val="N"/>
            <PreloadView val="N"/>
            <AllowEmptyDataview val="N"/>
            <KeepCreatedContext val="N"/>
          </TaskProperties>
          <SIDE_WIN>
            <AllowOptions val="N"/>
            <AllowQuery val="Y"/>
            <AllowModify val="Y"/>
            <AllowCreate val="Y"/>
            <AllowDelete val="Y"/>
            <AllowLocate val="Y"/>
            <AllowRange val="Y"/>
            <AllowIndexChange val="Y"/>
            <AllowSorting val="Y"/>
            <AllowIOFiles val="Y"/>
            <RecordCycle val="Y"/>
            <AllowEvents val="N"/>
            <AllowIndexOptimization val="Y"/>
            <AllowLocationInQuery val="Y"/>
            <AllowPrintingData val="N"/>
          </SIDE_WIN>
          <WIN>
            <OpenTaskWindow val="N"/>
            <CloseTaskWindow val="Y"/>
            <ForegroundWindow val="Y"/>
            <FlipFld val="N"/>
            <RefreshTaskWindow ReturnValue="N"/>
          </WIN>
          <BOX>
            <Direction val="V"/>
          </BOX>
        </Information>
        <TaskLogic>
          <LogicUnit id="2" propagate="78">
            <Level val="R"/>
            <Type val="M"/>
            <FieldID val="2"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
              <PublicObject comp="-1"/>
            </Event>
            <Expanded val="1"/>
            <LogicLines>
              <LogicLine>
                <DATAVIEW_SRC FlowIsn="2" Type="M">
                  <Condition val="N"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </DATAVIEW_SRC>
              </LogicLine>
              <LogicLine>
                <Select FieldID="1" FlowIsn="3" id="1">
                  <Column val="1"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="2" FlowIsn="4" id="2">
                  <Column val="2"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="5">
                  <Type val="0"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="6">
                  <Type val="0"/>
                  <Text val="Author: Jerry Janssens"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="7">
                  <Type val="0"/>
                  <Text val="Creation date: 20.06.2002"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="8">
                  <Type val="0"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="9">
                  <Type val="0"/>
                  <Text val="08.05.2013 JH SCR18105 Removed external flag"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="10">
                  <Type val="0"/>
                  <Text val="15.09.2005 LB set v.ForceWrite to 'False' in order to prevent problem with"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="11">
                  <Type val="0"/>
                  <Text val="exiting PASE job when MAGIC400.INI is set to readonly"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="12">
                  <Type val="0"/>
                  <Text val="21.11.2002 JJ v.ForceWrite, for easy change of behavior for testing"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="13">
                  <Type val="0"/>
                  <Text val="18.07.2002 JJ removed verify operation + unused expressions"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="14">
                  <Type val="0"/>
                  <Text val="21.06.2002 JJ --Workaround--: changed input expressions to INIPUT(...,'TRUE'LOG)"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="15">
                  <Type val="0"/>
                  <Text val="  Magic v.9 isn't behaving as documented: changes by INIPUT(...,'FALSE'LOG) are"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="16">
                  <Type val="0"/>
                  <Text val="  not immediately available... and therefore useless"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="17">
                  <Type val="0"/>
                  <Text val="- forgot to escape (\) commas"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="18">
                  <Type val="0"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="19">
                  <Type val="0"/>
                  <Text val="UFB545 allows (re)setting of the decimal and thousand separators in the ini"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="20">
                  <Type val="0"/>
                  <Text val="Behaviour is according to the parameters send"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="21">
                  <Type val="0"/>
                  <Text val="Only one parameter not blank:"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="22">
                  <Type val="0"/>
                  <Text val="  set accordingly avoid having identical thousand and decimal separaters"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="23">
                  <Type val="0"/>
                  <Text val="Two parameters not blank"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="24">
                  <Type val="0"/>
                  <Text val="   set both separators according to parameter"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="25">
                  <Type val="0"/>
                  <Text val="Both parameters blank"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="26">
                  <Type val="0"/>
                  <Text val="    reset separators according to the situation"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="27">
                  <Type val="0"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Select FieldID="3" FlowIsn="28" id="3">
                  <Column val="3"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="4" FlowIsn="29" id="4">
                  <Column val="4"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="5" FlowIsn="30" id="5">
                  <Column val="5"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="6" FlowIsn="31" id="6">
                  <Column val="6"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="32">
                  <Type val="0"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Select FieldID="7" FlowIsn="33" id="7">
                  <Column val="7"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="8" FlowIsn="34" id="8">
                  <Column val="8"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
              <LogicLine>
                <Select FieldID="9" FlowIsn="35" id="9">
                  <Column val="9"/>
                  <Type val="V"/>
                  <IsParameter val="N"/>
                  <DIFF_UPDATE val="T"/>
                  <Condition val="Y"/>
                  <Modifier val="S"/>
                  <Direction val="C"/>
                </Select>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
          <LogicUnit id="3" propagate="78">
            <Level val="T"/>
            <Type val="P"/>
            <FieldID val="2"/>
            <Scope val="S"/>
            <EngineDirective val="S"/>
            <ShowMessage val="Y"/>
            <Condition val="89"/>
            <Event>
              <EventType val="S"/>
              <PublicObject comp="-1"/>
            </Event>
            <Expanded val="1"/>
            <LogicLines>
              <LogicLine>
                <Remark FlowIsn="36">
                  <Type val="2"/>
                  <Text val="21.11.2002---Work around always force write---:"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="37">
                  <FieldID val="9"/>
                  <WithValue val="1"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="38">
                  <Type val="2"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="39">
                  <Type val="2"/>
                  <Text val="Read initial and current vallues"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="40">
                  <FieldID val="3"/>
                  <WithValue val="11"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="41">
                  <FieldID val="4"/>
                  <WithValue val="12"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="42">
                  <FieldID val="5"/>
                  <WithValue val="15"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="43">
                  <FieldID val="6"/>
                  <WithValue val="16"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="44">
                  <Type val="2"/>
                  <Text val="Store original Decimalseparator in global parameter, if not done so already"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Evaluate FlowIsn="45">
                  <Expression val="13"/>
                  <Condition Exp="7"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <Evaluate FlowIsn="46">
                  <Expression val="14"/>
                  <Condition Exp="9"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="47">
                  <Type val="2"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="48">
                  <Type val="2"/>
                  <Text val="Argumnet(s) for new separators provided"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="72" EndBlockSegment="69" FlowIsn="49" Type="I">
                  <Condition Exp="3"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="50">
                  <Type val="2"/>
                  <Text val="Set separators according to parameter if provided"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Evaluate FlowIsn="51">
                  <Expression val="17"/>
                  <Condition Exp="2"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <Evaluate FlowIsn="52">
                  <Expression val="20"/>
                  <Condition Exp="5"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="53">
                  <Type val="2"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="54">
                  <Type val="2"/>
                  <Text val="If only one argument provided ensure DecimalSep &lt;> ThousandSep"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="55">
                  <Type val="2"/>
                  <Text val="in order of preference"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="56">
                  <Type val="2"/>
                  <Text val="k:  initial k,  point, comma"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="57">
                  <Type val="2"/>
                  <Text val="d: initial d,  comma, point"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="61" EndBlockSegment="61" FlowIsn="58" Type="I">
                  <Condition Exp="4"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="59">
                  <FieldID val="8"/>
                  <WithValue val="24"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <Evaluate FlowIsn="60">
                  <Expression val="21"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <END_BLK FlowIsn="61"/>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="62">
                  <Type val="2"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="66" EndBlockSegment="66" FlowIsn="63" Type="I">
                  <Condition Exp="6"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <Update FlowIsn="64">
                  <FieldID val="7"/>
                  <WithValue val="23"/>
                  <Incremental val="N"/>
                  <ForcedUpdate val="Y"/>
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Update>
              </LogicLine>
              <LogicLine>
                <Evaluate FlowIsn="65">
                  <Expression val="18"/>
                  <Condition Exp="6"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <END_BLK FlowIsn="66"/>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="67">
                  <Type val="2"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="68">
                  <Type val="2"/>
                  <Text val="Else (no arguments) Reset if necessary"/>
                </Remark>
              </LogicLine>
              <LogicLine>
                <BLOCK EndBlock="72" EndBlockSegment="72" FlowIsn="69" Type="E">
                  <Condition val="Y"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </BLOCK>
              </LogicLine>
              <LogicLine>
                <Evaluate FlowIsn="70">
                  <Expression val="19"/>
                  <Condition Exp="8"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <Evaluate FlowIsn="71">
                  <Expression val="22"/>
                  <Condition Exp="10"/>
                  <Modifier val="B"/>
                  <Direction val="C"/>
                </Evaluate>
              </LogicLine>
              <LogicLine>
                <END_BLK FlowIsn="72"/>
              </LogicLine>
              <LogicLine>
                <Remark FlowIsn="73">
                  <Type val="2"/>
                  <Text val=" "/>
                </Remark>
              </LogicLine>
            </LogicLines>
          </LogicUnit>
        </TaskLogic>
        <TaskForms>
          <FormEntry id="2">
            <PropertyList model="FORM_GUI0">
              <_Comment id="218"/>
              <FormName id="311" valUnicode="UFB545 (Re)SetDecimalSep."/>
              <_TabbingOrder id="318" val="1"/>
              <WindowType id="358" val="1"/>
              <PersistentFormState id="493"/>
            </PropertyList>
          </FormEntry>
        </TaskForms>
        <Expressions>
          <Expression id="1">
            <ExpSyntax val="'FALSE'LOG"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="2">
            <ExpSyntax val="{0,1}&lt;>''"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="3">
            <ExpSyntax val="{0,1}&lt;>'' OR {0,2}&lt;>''"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="4">
            <ExpSyntax val="{0,1}={0,6} AND {0,2}=''"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="5">
            <ExpSyntax val="{0,2}&lt;>''"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="6">
            <ExpSyntax val="{0,2}={0,5} AND {0,1}=''"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="7">
            <ExpSyntax val="{0,3}=''"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="8">
            <ExpSyntax val="{0,3}&lt;>'' AND {0,3}&lt;>{0,5}"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="9">
            <ExpSyntax val="{0,4}=''"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="10">
            <ExpSyntax val="{0,4}&lt;>'' AND {0,4}&lt;>{0,6}"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="11">
            <ExpSyntax val="Trim (GetParam ('DecimalSeparator'))"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="12">
            <ExpSyntax val="Trim (GetParam ('ThousandSeparator'))"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="13">
            <ExpSyntax val="SetParam ('DecimalSeparator',{0,5})"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="14">
            <ExpSyntax val="SetParam ('ThousandSeparator',{0,6})"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="15">
            <ExpSyntax val="INIGet ('DecimalSeparator')"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="16">
            <ExpSyntax val="INIGet ('ThousandSeparator')"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="17">
            <ExpSyntax val="INIPut ('DecimalSeparator='&amp;IF ({0,1}=',','\','')&amp;Trim ({0,1}),{0,9})"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="18">
            <ExpSyntax val="INIPut ('DecimalSeparator='&amp;IF ({0,7}=',','\','')&amp;Trim ({0,7}),{0,9})"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="19">
            <ExpSyntax val="INIPut ('DecimalSeparator='&amp;IF ({0,3}=',','\','')&amp;Trim ({0,3}),{0,9})"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="20">
            <ExpSyntax val="INIPut ('ThousandSeparator='&amp;IF ({0,2}=',','\','')&amp;Trim ({0,2}),{0,9})"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="21">
            <ExpSyntax val="INIPut ('ThousandSeparator='&amp;IF ({0,8}=',','\','')&amp;Trim ({0,8}),{0,9})"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="22">
            <ExpSyntax val="INIPut ('ThousandSeparator='&amp;IF ({0,4}=',','\','')&amp;Trim ({0,4}),{0,9})"/>
            <ExpAttribute val="B"/>
          </Expression>
          <Expression id="23">
            <ExpSyntax val="Trim (CASE ('TRUE'LOG,{0,2}&lt;>{0,3} AND {0,3}&lt;>'',{0,3},{0,2}&lt;>',',',','.'))"/>
            <ExpAttribute val="A"/>
          </Expression>
          <Expression id="24">
            <ExpSyntax val="Trim (CASE ('TRUE'LOG,{0,1}&lt;>{0,4} AND {0,4}&lt;>'',{0,4},{0,1}&lt;>'.','.',','))"/>
            <ExpAttribute val="A"/>
          </Expression>
        </Expressions>
      </Task>
    </Programs>
  </ProgramsRepository>

</Application>
